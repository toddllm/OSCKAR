#!/usr/bin/python

# Appify - Run user apps in separate VMs
#   (application segregation through OSCKAR)
#
# Copyright 2009 Todd Deshane and Patrick F. Wilbur

import os,sys
sys.path.append('/usr/local/share/osckar/lib/')
import osckar as o

osckar = o.Osckar()


path='/etc/kiosckar/contracts/'

if len(sys.argv) > 2:
    port = sys.argv[1]
    appliance = sys.argv[2]
if len(sys.argv) > 1:
    port = 5000
    appliance = sys.argv[1]
else:
    print "Usage:"
    print sys.argv[0] + " application"
    print sys.argv[0] + " OSCKAR_Management_Port application"
    sys.exit()

osckar.connect('localhost',port)
osckar.registerEvent('VM_START_SUCCEEDED')
osckar.registerEvent('VM_BUILD_SUCCEEDED')

def buildBaseVMC(vm_name, install_mirror):
    file = open("/etc/appify/appify_base_template.vmt")
    vmt = file.read()
    file.close()
    vmc = vmt.replace('$VM_NAME', vm_name)
    vmc = vmc.replace('$INSTALL_MIRROR', install_mirror)
    return vmc

def buildVMC(vm_name, install_mirror):
    file = open("/etc/appify/appify_virtualappliance_template.vmt")
    vmt = file.read()
    file.close()
    vmc = vmt.replace('$VM_NAME', vm_name)
    vmc = vmc.replace('$INSTALL_MIRROR', install_mirror)
    return vmc

def addVirtualAppliance(appliance):
    # First, let's create (if one does not already exist) the
    # base OS disk image using the BUILDER Interface.  This
    # disk image will never actually be booted in a VM, but 
    # all the virtual appliances' images will be copy-on-write
    # images that are based on this image.
    default_install_mirror = "http://archive.ubuntu.com/ubuntu"
    vm_name = "appify_base"
    install_mirror = default_install_mirror
    vmc = buildBaseVMC(vm_name, install_mirror)
    file = open("/etc/appify/contracts/" + vm_name, "w")
    file.write(vmc)
    file.close()
    osckar.signal('IMPORT_VMC', vmc)
    osckar.signal('BUILD_VM', vm_name)
    while osckar.waitForEvent('VM_BUILD_SUCCEEDED') != vm_name:
        pass  
    #
    #
    # Next, let's create (if one does not already exist) the
    # virtual appliance disk image using the BUILDER Interface.
    vm_name = "appify_virtualappliance_" + appliance
    vmc = buildVMC(vm_name, install_mirror)
    file = open("/etc/appify/contracts/" + vm_name, "w")
    file.write(vmc)
    file.close()
    osckar.signal('IMPORT_VMC', vmc)
    osckar.signal('BUILD_VM', vm_name)
    while osckar.waitForEvent('VM_BUILD_SUCCEEDED') != vm_name:
        pass

def launchAppliance(VA):
    VM = "appify_virtualappliance_" + VM
    f = open(path + VM, 'r')
    osckar.signal('IMPORT_VMC', f.read())
    osckar.signal('START_VM', VM)
    while osckar.waitForEvent('VM_START_SUCCEEDED') != VM:
        pass
    os.system('virt-viewer ' + VM)



addVirtualAppliance(appliance)
launchAppliance(appliance)
